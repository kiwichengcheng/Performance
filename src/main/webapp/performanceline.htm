<!DOCTYPE HTML>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
        <title>Time Series</title>
        <script type="text/javascript" src="jslib/jquery-easyui-1.2.5/jquery-1.7.1.min.js"></script>
        <link rel="stylesheet" type="text/css" href="jslib/jquery-easyui-1.2.5/themes/default/easyui.css">
        <link rel="stylesheet" type="text/css" href="jslib/jquery-easyui-1.2.5/themes/icon.css">
        <link rel="stylesheet" type="text/css" href="jslib/jquery-easyui-1.2.5/demo/demo.css">
        <script type="text/javascript" src="jslib/jquery-easyui-1.2.5/jquery.easyui.min.js"></script>
        <script type="text/javascript">
            $(function() {
                $("input[name='basetype']:eq(0)").attr("checked", 'checked');
                $("input[name='perfield']:eq(0)").attr("checked", 'checked');
                $("input[name='perfield']").attr("disabled", false);
                $("#basetimerange").hide();
                $("input[name='basetype']").change(function() {
                    if (this.value == 'env') {
                        $("#basetimerange").hide();
                        $("input[name='perfield']").attr("disabled", false);
                    } else
                    {
                        $("#basetimerange").show();
                        $("input[name='perfield']").attr("disabled", true);
                        $("input[name='perfield']:eq(0)").attr("checked", 'checked');
                    }
                });
                $("#RT").combobox({
                    onSelect: function(record) {
                        $("#Sch").combobox("disable");
                        $("#RT").combobox("disable");
                        $.ajax({
                            type: "GET",
                            url: "/Performance/GetSchedule?account=" + record.id,
                            dataType: "json",
                            success: function(data) {
                                var odata = $("#Sch").combobox("getData");
                                odata = odata.concat(data);
                                //odata.push({"account":"1","scheduleName":"hahaha"});
                                $("#Sch").combobox("loadData", odata);
                                $("#Sch").combobox("enable");
                                $("#RT").combobox("enable");
                            }

                        });
                    },
                    onUnselect: function(record) {
                        $("#Sch").combobox("disable");
                        $("#RT").combobox("disable");
                        var odata = $("#Sch").combobox("getData");

                        odata = $.grep(odata, function(item, i) {
                            return item.account != record.id;
                        });

                        $("#Sch").combobox("loadData", odata);
                        $("#Sch").combobox("clear");
                        $("#Sch").combobox("enable");
                        $("#RT").combobox("enable");

                    },
                    url: 'combobox_data.json',
                    method: 'get',
                    valueField: 'id',
                    textField: 'text',
                    editable: false,
                    multiple: true,
                    panelHeight: 'auto'
                });
                $("#Sch").combobox({
                    valueField: 'value',
                    textField: 'scheduleName',
                    groupField: 'account',
                    groupFormatter: function(group) {
                        return '<span style="color:red"><strong>' + group + '</strong></span>';
                    },
                    multiple: true
                });
                $("#submit").click(function() {
                    var rtarray = $("#RT").combobox("getValues");
                    $("#formRT").val(rtarray);
                    
                    var jsonstring = '[';
                    $.each($("#Sch").combobox("getValues"),function(index,value){
                        var tempvalue = value.split(",");
                        jsonstring += '{baseaccount:\''+tempvalue[0]+'\',baseschedule:\''+tempvalue[1]+'\',baseenv:\''+$("#baseenv").val()+'\',targetaccount:\''+tempvalue[0]+'\',targetschedule:\''+tempvalue[1]+'\',targetenv:\''+$("#targetenv").val()+'\'},'
                        
                    });
                    
                    jsonstring += ']';
                    $("#formSch").val(jsonstring);
                    $("#formbasetype").val($('input[name="basetype"]:checked').val());
                    $("#formbasefromdate").val($("#datetimefrom").datebox("getValue"));
                    $("#formbasetodate").val($("#datetimeto").datebox("getValue"));
                    $("#formperfield").val($('input[name="perfield"]:checked').val());
                    $("#formavgfromdate").val($("#basetimefrom").datebox("getValue"));
                    $("#formavgtodate").val($("#basetimeto").datebox("getValue"));
                    
                    $("form").submit();
                });
                $("#query").click(function() {
                    var rttext = $("#RT").combobox("getValues");
                    var linetype = $('input[name="perfield"]:checked').val();
                    if (rttext.length > 0) {
                        $("#body").html("");
                        for (var rtname in rttext) {
                            var schedules = new Array(0);
                            $.each($("#Sch").combobox("getValues"), function(index, value) {
                                var tempvalue = value.split(",");
                                if (tempvalue[0] == rttext[rtname]) {
                                    schedules.push(tempvalue[1]);
                                }
                            });
                            for (var schind in schedules) {
                                content = "<div id='container" + schedules[schind] + "' style='min-width: 310px; height: 400px; margin: 0 auto'></div>"
                                $("#body").append(content);
                                var options = {
                                    chart: {
                                        type: 'spline',
                                        zoomType: 'x',
                                        renderTo: 'container' + schedules[schind]
                                    },
                                    credits: false,
                                    title: {
                                        text: rttext[rtname]
                                    },
                                    subtitle: {
                                        text: schedules[schind]
                                    },
                                    xAxis: {
                                        type: 'datetime',
                                        dateTimeLabelFormats: {// don't display the dummy year
                                            day: '%Y %b %d'
                                        },
                                        maxZoom: 14 * 24 * 3600000 // fourteen days
                                    },
                                    yAxis: {
                                        title: {
                                            text: 'Taking time (s)'
                                        },
                                        min: 0/*,
                                         plotLines: [{
                                         color: 'red',
                                         width: 2,
                                         value: 1500,
                                         dashStyle: 'longdashdot',
                                         label:{
                                         text:'haha'
                                         }
                                         }]*/
                                    },
                                    tooltip: {
                                        formatter: function() {
                                            return '<b>' + this.series.name + '</b><br/>' +
                                                    Highcharts.dateFormat('%Y-%b-%d', this.x) + ': ' + this.y + ' s' +
                                                    '<br/> fields:' + this.point.fields +
                                                    '<br/> ILcount: ' + this.point.ILcount;
                                        }
                                    },
                                    series: []
                                }
                                $.ajax({//base

                                    type: "POST",
                                    async: false,
                                    url: "/Performance/TimeSerise",
                                    data: {
                                        type: $('input[name="basetype"]:checked').val(),
                                        account: rttext[rtname],
                                        fromdate: $("#datetimefrom").datebox("getValue"),
                                        todate: $("#datetimeto").datebox("getValue"),
                                        env: $("#baseenv").val(),
                                        querysch: schedules[schind],
                                        avgfromdate: $("#basetimefrom").datebox("getValue"),
                                        avgtodate: $("#basetimeto").datebox("getValue")
                                    },
                                    datatype: "json",
                                    success: function(data) {
                                        var result = eval(data);
                                        var series = {data: [], name: 'base:' + (($('input[name="basetype"]:checked').val() == 'env') ? $("#baseenv").val() : ($("#baseenv").val() + ' avg from ' + $("#basetimefrom").datebox("getValue") + ' to ' + $("#basetimeto").datebox("getValue"))), color: 'red'};
                                        $.each(result, function(key, value) {
                                            //$.each(value, function(key, val) {

                                               // if (key == 'taketime') {
                                                    var d = value.taketime.split(",");
                                                    var x = Date.UTC(d[0], d[1] - 1, d[2]);
                                                    var mydate;
                                                    if (linetype == 'o') {
                                                        mydate = "{'x':" + x + ",'y':" + parseFloat(d[3]) + ",'fields':" + parseFloat(d[5]) + ",'ILcount':" + parseFloat(d[4]);
                                                        if(value.omax == 0 && value.omin == 0)
                                                            mydate+= "}";
                                                        else if(value.omax == 1)
                                                            mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_collapse.gif)'}}";
                                                        else
                                                             mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_expand.gif)'}}";
                                                        series.data.push(eval("(" + mydate + ")"));
                                                        //series.data.push([x,parseFloat(d[3]),parseFloat(d[4]),parseFloat(d[5])]);
                                                    }
                                                    if (linetype == 'i') {
                                                        mydate = "{'x':" + x + ",'y':" + parseFloat(d[3]) / parseFloat(d[4]) + ",'fields':" + parseFloat(d[5]) + ",'ILcount':" + parseFloat(d[4]);
                                                        if(value.imax == 0 && value.imin == 0)
                                                            mydate+= "}";
                                                        else if(value.imax == 1)
                                                            mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_collapse.gif)'}}";
                                                        else
                                                             mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_expand.gif)'}}";
                                                        series.data.push(eval("(" + mydate + ")"));
                                                        //series.data.push([x,parseFloat(d[3])/parseFloat(d[4]),parseFloat(d[4]),parseFloat(d[5])]);
                                                    }
                                                    if (linetype == 'f') {
                                                        mydate = "{'x':" + x + ",'y':" + parseFloat(d[3]) / parseFloat(d[5]) + ",'fields':" + parseFloat(d[5]) + ",'ILcount':" + parseFloat(d[4]);
                                                        if(value.fmax == 0 && value.fmin == 0)
                                                            mydate+= "}";
                                                        else if(value.fmax == 1)
                                                            mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_collapse.gif)'}}";
                                                        else
                                                             mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_expand.gif)'}}";
                                                        
                                                        series.data.push(eval("(" + mydate + ")"));
                                                        series.data.push([x, parseFloat(d[3]) / parseFloat(d[5]), parseFloat(d[4]), parseFloat(d[5])]);
                                                    }
                                                    //series.data.push(fields,parseFloat(d[5]));
                                                    //series.data.push(ILcount,parseFloat(d[4]))
                                                //}


                                            //});
                                        });
                                        options.series.push(series);
                                        var chart = new Highcharts.Chart(options);
                                    },
                                    error: function(jqXHR, textStatus, errorThrown) {
                                        alert(jqXHR + ":::::" + textStatus + ":::::" + errorThrown);

                                    }

                                });


                                $.ajax({//target

                                    type: "POST",
                                    async: false,
                                    url: "/Performance/TimeSerise",
                                    data: {
                                        /*type:$('input[name="basetype"]:checked').val(),*/
                                        account: rttext[rtname],
                                        fromdate: $("#datetimefrom").datebox("getValue"),
                                        todate: $("#datetimeto").datebox("getValue"),
                                        env: $("#targetenv").val(),
                                        querysch: schedules[schind],
                                        type: 'env'
                                    },
                                    datatype: "json",
                                    success: function(data) {
                                        var result = eval(data);
                                        var series = {data: [], name: 'target:' + $("#targetenv").val(), color: 'blue'};
                                        $.each(result, function(key, value) {
                                            //$.each(value, function(key, val) {

                                               // if (key == 'taketime') {
                                                    var d = value.taketime.split(",");
                                                    var x = Date.UTC(d[0], d[1] - 1, d[2]);
                                                    var mydate;
                                                    if (linetype == 'o') {
                                                        mydate = "{'x':" + x + ",'y':" + parseFloat(d[3]) + ",'fields':" + parseFloat(d[5]) + ",'ILcount':" + parseFloat(d[4]);
                                                        if(value.omax == 0 && value.omin == 0)
                                                            mydate+= "}";
                                                        else if(value.omax == 1)
                                                            mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_collapse.gif)'}}";
                                                        else
                                                             mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_expand.gif)'}}";
                                                        series.data.push(eval("(" + mydate + ")"));
                                                        //series.data.push([x,parseFloat(d[3]),parseFloat(d[4]),parseFloat(d[5])]);
                                                    }
                                                    if (linetype == 'i') {
                                                        mydate = "{'x':" + x + ",'y':" + parseFloat(d[3]) / parseFloat(d[4]) + ",'fields':" + parseFloat(d[5]) + ",'ILcount':" + parseFloat(d[4]);
                                                        if(value.imax == 0 && value.imin == 0)
                                                            mydate+= "}";
                                                        else if(value.imax == 1)
                                                            mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_collapse.gif)'}}";
                                                        else
                                                             mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_expand.gif)'}}";
                                                        series.data.push(eval("(" + mydate + ")"));
                                                        //series.data.push([x,parseFloat(d[3])/parseFloat(d[4]),parseFloat(d[4]),parseFloat(d[5])]);
                                                    }
                                                    if (linetype == 'f') {
                                                        mydate = "{'x':" + x + ",'y':" + parseFloat(d[3]) / parseFloat(d[5]) + ",'fields':" + parseFloat(d[5]) + ",'ILcount':" + parseFloat(d[4]);
                                                        if(value.fmax == 0 && value.fmin == 0)
                                                            mydate+= "}";
                                                        else if(value.fmax == 1)
                                                            mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_collapse.gif)'}}";
                                                        else
                                                             mydate +=",marker:{symbol: 'url(jslib/jquery-easyui-1.2.5/themes/default/images/panel_tool_expand.gif)'}}";
                                                        
                                                        series.data.push(eval("(" + mydate + ")"));
                                                        series.data.push([x, parseFloat(d[3]) / parseFloat(d[5]), parseFloat(d[4]), parseFloat(d[5])]);
                                                    }
                                                    //series.data.push(fields,parseFloat(d[5]));
                                                    //series.data.push(ILcount,parseFloat(d[4]))
                                                //}


                                            //});
                                        });
                                        options.series.push(series);
                                        var chart = new Highcharts.Chart(options);
                                    },
                                    error: function(jqXHR, textStatus, errorThrown) {
                                        alert(jqXHR + ":::::" + textStatus + ":::::" + errorThrown);

                                    }

                                });
                            }// for schedules
                        }// for rt
                    }
                });
            });


        </script>
    </head>
    <body>
        <script src="jslib/Highcharts-3.0.9/js/highcharts.js"></script>
        <script src="jslib/Highcharts-3.0.9/js/modules/exporting.js"></script>
        <span><a href="performance.htm">barchart</a>&nbsp;<a href="performanceline.htm">linechart(single schedule)</a>&nbsp;<a href="performancelinediffsch.htm">linechart(two schedules)</a>&nbsp;<a href="performanceadvincebar.htm">bar(two schedules)</a></span>
        <p>Multiple ComboBox: </p>
        <input id="RT" 
               style="width:500px;"
               >
        <input id="Sch" 
               style="width:500px;"
               ><br>
        <span>from :<input class="easyui-datebox" id="datetimefrom" name="datetime" required="required" style="width:150px"/></span>
        <span> to :<input class="easyui-datebox" id="datetimeto" name="datetime" required="required" style="width:150px"/></span>
        <br>
        base: <input type="radio" name="basetype" value="env">env</input><input type="radio" name="basetype" value="avg">avg</avg>
    <select name="baseenv" id="baseenv">
        <option value="PPE">PPE</option>
        <option value="DR">DR</option>
    </select>
    <span id="basetimerange"> from: <input class="easyui-datebox" id="basetimefrom" /> to: <input class="easyui-datebox" id="basetimeto"/></span>
    <br>
    target: <select name="targetenv" id="targetenv">
        <option value="PPE">PPE</option>
        <option value="DR">DR</option>
    </select><br>
    <input type="radio" id="perfield" name="perfield" value="o">original chart</input><input type="radio" id="perfield" name="perfield" value="f">only per-field</input><input type="radio" id="perfield" name="perfield" value="i">only per-instrument</input><br>
    <input type="button" id="query" value="query" ><br>
    <input type="button" id ="submit" value="download">
    <form action="ExportfileTimeseriessingle">
        <input type="hidden" name="RT" id="formRT"/>
        <input type="hidden" name="Sch" id="formSch"/>
        <input type="hidden" name="basetype" id="formbasetype"/>
        <input type="hidden" name="targettype" id="formtargettype" value="env"/>
        <input type="hidden" name="basefromdate" id="formbasefromdate"/>
        <input type="hidden" name="basetodate" id="formbasetodate"/>
        <input type="hidden" name="baseenv" id="formbaseenv"/>
        <input type="hidden" name="avgfromdate" id="formavgfromdate"/>
        <input type="hidden" name="avgtodate" id="formavgtodate"/>
        <input type="hidden" name="targetenv" id="formtargetenv"/>
        <input type="hidden" name="fperfield" id="formperfield"/>
    </form>
    <div id="body">

    </div>
</body>
</html>
